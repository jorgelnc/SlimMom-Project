import { getDefaultExportFromCjs as d } from "../../_virtual/_commonjsHelpers.js";
import { __module as v } from "../../_virtual/index4.js";
v.exports = function(n) {
  return g(m(n), n);
};
v.exports.array = g;
function g(n, r) {
  var t = n.length, e = new Array(t), o = {}, u = t, c = y(r), f = E(n);
  for (r.forEach(function(a) {
    if (!f.has(a[0]) || !f.has(a[1]))
      throw new Error("Unknown node. There is an unknown node in the supplied edges.");
  }); u--; )
    o[u] || l(n[u], u, /* @__PURE__ */ new Set());
  return e;
  function l(a, s, i) {
    if (i.has(a)) {
      var w;
      try {
        w = ", node was:" + JSON.stringify(a);
      } catch {
        w = "";
      }
      throw new Error("Cyclic dependency" + w);
    }
    if (!f.has(a))
      throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: " + JSON.stringify(a));
    if (!o[s]) {
      o[s] = !0;
      var h = c.get(a) || /* @__PURE__ */ new Set();
      if (h = Array.from(h), s = h.length) {
        i.add(a);
        do {
          var p = h[--s];
          l(p, f.get(p), i);
        } while (s);
        i.delete(a);
      }
      e[--t] = a;
    }
  }
}
function m(n) {
  for (var r = /* @__PURE__ */ new Set(), t = 0, e = n.length; t < e; t++) {
    var o = n[t];
    r.add(o[0]), r.add(o[1]);
  }
  return Array.from(r);
}
function y(n) {
  for (var r = /* @__PURE__ */ new Map(), t = 0, e = n.length; t < e; t++) {
    var o = n[t];
    r.has(o[0]) || r.set(o[0], /* @__PURE__ */ new Set()), r.has(o[1]) || r.set(o[1], /* @__PURE__ */ new Set()), r.get(o[0]).add(o[1]);
  }
  return r;
}
function E(n) {
  for (var r = /* @__PURE__ */ new Map(), t = 0, e = n.length; t < e; t++)
    r.set(n[t], t);
  return r;
}
var k = v.exports;
const A = /* @__PURE__ */ d(k);
export {
  A as default
};
