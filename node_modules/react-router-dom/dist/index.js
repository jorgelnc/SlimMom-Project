import * as J from "../../react/index.js";
import { r as c } from "../../react/index.js";
import "../../react-dom/index.js";
import { Router as Q, UNSAFE_NavigationContext as L, useHref as Z, useResolvedPath as A, useLocation as I, UNSAFE_DataRouterStateContext as $, useNavigate as ee, UNSAFE_useRouteId as te, UNSAFE_RouteContext as ne, UNSAFE_DataRouterContext as re } from "../../react-router/dist/index.js";
import { Route as Ie, Routes as Ke, UNSAFE_LocationContext as Be, createRoutesFromChildren as Me, createRoutesFromChildren as We, useInRouterContext as je, useRouteError as ze, useRoutes as He } from "../../react-router/dist/index.js";
import { createBrowserHistory as ae, stripBasename as y, UNSAFE_warning as z, createPath as k, UNSAFE_invariant as N, joinPaths as oe, matchPath as M } from "../../@remix-run/router/dist/router.js";
import { Action as Ge, isRouteErrorResponse as Xe, matchRoutes as Ye, parsePath as Je, resolvePath as Qe } from "../../@remix-run/router/dist/router.js";
/**
 * React Router DOM v6.21.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function g() {
  return g = Object.assign ? Object.assign.bind() : function(e) {
    for (var n = 1; n < arguments.length; n++) {
      var o = arguments[n];
      for (var i in o)
        Object.prototype.hasOwnProperty.call(o, i) && (e[i] = o[i]);
    }
    return e;
  }, g.apply(this, arguments);
}
function K(e, n) {
  if (e == null)
    return {};
  var o = {}, i = Object.keys(e), t, r;
  for (r = 0; r < i.length; r++)
    t = i[r], !(n.indexOf(t) >= 0) && (o[t] = e[t]);
  return o;
}
const _ = "get", F = "application/x-www-form-urlencoded";
function U(e) {
  return e != null && typeof e.tagName == "string";
}
function ie(e) {
  return U(e) && e.tagName.toLowerCase() === "button";
}
function se(e) {
  return U(e) && e.tagName.toLowerCase() === "form";
}
function le(e) {
  return U(e) && e.tagName.toLowerCase() === "input";
}
function ue(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function ce(e, n) {
  return e.button === 0 && // Ignore everything but left clicks
  (!n || n === "_self") && // Let browser handle "target=_blank" etc.
  !ue(e);
}
let R = null;
function fe() {
  if (R === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), R = !1;
    } catch {
      R = !0;
    }
  return R;
}
const me = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function V(e) {
  return e != null && !me.has(e) ? (process.env.NODE_ENV !== "production" && z(!1, '"' + e + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + F + '"')), null) : e;
}
function de(e, n) {
  let o, i, t, r, a;
  if (se(e)) {
    let l = e.getAttribute("action");
    i = l ? y(l, n) : null, o = e.getAttribute("method") || _, t = V(e.getAttribute("enctype")) || F, r = new FormData(e);
  } else if (ie(e) || le(e) && (e.type === "submit" || e.type === "image")) {
    let l = e.form;
    if (l == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let u = e.getAttribute("formaction") || l.getAttribute("action");
    if (i = u ? y(u, n) : null, o = e.getAttribute("formmethod") || l.getAttribute("method") || _, t = V(e.getAttribute("formenctype")) || V(l.getAttribute("enctype")) || F, r = new FormData(l, e), !fe()) {
      let {
        name: s,
        type: m,
        value: h
      } = e;
      if (m === "image") {
        let v = s ? s + "." : "";
        r.append(v + "x", "0"), r.append(v + "y", "0");
      } else
        s && r.append(s, h);
    }
  } else {
    if (U(e))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    o = _, i = null, t = F, a = e;
  }
  return r && t === "text/plain" && (a = r, r = void 0), {
    action: i,
    method: o.toLowerCase(),
    encType: t,
    formData: r,
    body: a
  };
}
const pe = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"], he = ["aria-current", "caseSensitive", "className", "end", "style", "to", "unstable_viewTransition", "children"], ve = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "unstable_viewTransition"], H = /* @__PURE__ */ c.createContext({
  isTransitioning: !1
});
process.env.NODE_ENV !== "production" && (H.displayName = "ViewTransition");
const be = /* @__PURE__ */ c.createContext(/* @__PURE__ */ new Map());
process.env.NODE_ENV !== "production" && (be.displayName = "Fetchers");
const we = "startTransition", W = J[we];
function Oe(e) {
  let {
    basename: n,
    children: o,
    future: i,
    window: t
  } = e, r = c.useRef();
  r.current == null && (r.current = ae({
    window: t,
    v5Compat: !0
  }));
  let a = r.current, [l, u] = c.useState({
    action: a.action,
    location: a.location
  }), {
    v7_startTransition: s
  } = i || {}, m = c.useCallback((h) => {
    s && W ? W(() => u(h)) : u(h);
  }, [u, s]);
  return c.useLayoutEffect(() => a.listen(m), [a, m]), /* @__PURE__ */ c.createElement(Q, {
    basename: n,
    children: o,
    location: l.location,
    navigationType: l.action,
    navigator: a,
    future: i
  });
}
process.env.NODE_ENV;
const Se = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Ee = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, q = /* @__PURE__ */ c.forwardRef(function(n, o) {
  let {
    onClick: i,
    relative: t,
    reloadDocument: r,
    replace: a,
    state: l,
    target: u,
    to: s,
    preventScrollReset: m,
    unstable_viewTransition: h
  } = n, v = K(n, pe), {
    basename: x
  } = c.useContext(L), b, w = !1;
  if (typeof s == "string" && Ee.test(s) && (b = s, Se))
    try {
      let p = new URL(window.location.href), d = s.startsWith("//") ? new URL(p.protocol + s) : new URL(s), C = y(d.pathname, x);
      d.origin === p.origin && C != null ? s = C + d.search + d.hash : w = !0;
    } catch {
      process.env.NODE_ENV !== "production" && z(!1, '<Link to="' + s + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let S = Z(s, {
    relative: t
  }), E = xe(s, {
    replace: a,
    state: l,
    target: u,
    preventScrollReset: m,
    relative: t,
    unstable_viewTransition: h
  });
  function f(p) {
    i && i(p), p.defaultPrevented || E(p);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ c.createElement("a", g({}, v, {
      href: b || S,
      onClick: w || r ? i : f,
      ref: o,
      target: u
    }))
  );
});
process.env.NODE_ENV !== "production" && (q.displayName = "Link");
const ye = /* @__PURE__ */ c.forwardRef(function(n, o) {
  let {
    "aria-current": i = "page",
    caseSensitive: t = !1,
    className: r = "",
    end: a = !1,
    style: l,
    to: u,
    unstable_viewTransition: s,
    children: m
  } = n, h = K(n, he), v = A(u, {
    relative: h.relative
  }), x = I(), b = c.useContext($), {
    navigator: w,
    basename: S
  } = c.useContext(L), E = b != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  Le(v) && s === !0, f = w.encodeLocation ? w.encodeLocation(v).pathname : v.pathname, p = x.pathname, d = b && b.navigation && b.navigation.location ? b.navigation.location.pathname : null;
  t || (p = p.toLowerCase(), d = d ? d.toLowerCase() : null, f = f.toLowerCase()), d && S && (d = y(d, S) || d);
  const C = f !== "/" && f.endsWith("/") ? f.length - 1 : f.length;
  let D = p === f || !a && p.startsWith(f) && p.charAt(C) === "/", B = d != null && (d === f || !a && d.startsWith(f) && d.charAt(f.length) === "/"), P = {
    isActive: D,
    isPending: B,
    isTransitioning: E
  }, X = D ? i : void 0, O;
  typeof r == "function" ? O = r(P) : O = [r, D ? "active" : null, B ? "pending" : null, E ? "transitioning" : null].filter(Boolean).join(" ");
  let Y = typeof l == "function" ? l(P) : l;
  return /* @__PURE__ */ c.createElement(q, g({}, h, {
    "aria-current": X,
    className: O,
    ref: o,
    style: Y,
    to: u,
    unstable_viewTransition: s
  }), typeof m == "function" ? m(P) : m);
});
process.env.NODE_ENV !== "production" && (ye.displayName = "NavLink");
const Ne = /* @__PURE__ */ c.forwardRef((e, n) => {
  let {
    fetcherKey: o,
    navigate: i,
    reloadDocument: t,
    replace: r,
    state: a,
    method: l = _,
    action: u,
    onSubmit: s,
    relative: m,
    preventScrollReset: h,
    unstable_viewTransition: v
  } = e, x = K(e, ve), b = Fe(), w = Te(u, {
    relative: m
  }), S = l.toLowerCase() === "get" ? "get" : "post", E = (f) => {
    if (s && s(f), f.defaultPrevented)
      return;
    f.preventDefault();
    let p = f.nativeEvent.submitter, d = (p == null ? void 0 : p.getAttribute("formmethod")) || l;
    b(p || f.currentTarget, {
      fetcherKey: o,
      method: d,
      navigate: i,
      replace: r,
      state: a,
      relative: m,
      preventScrollReset: h,
      unstable_viewTransition: v
    });
  };
  return /* @__PURE__ */ c.createElement("form", g({
    ref: n,
    method: S,
    action: w,
    onSubmit: t ? s : E
  }, x));
});
process.env.NODE_ENV !== "production" && (Ne.displayName = "Form");
process.env.NODE_ENV;
var T;
(function(e) {
  e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(T || (T = {}));
var j;
(function(e) {
  e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(j || (j = {}));
function ge(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function G(e) {
  let n = c.useContext(re);
  return n || (process.env.NODE_ENV !== "production" ? N(!1, ge(e)) : N(!1)), n;
}
function xe(e, n) {
  let {
    target: o,
    replace: i,
    state: t,
    preventScrollReset: r,
    relative: a,
    unstable_viewTransition: l
  } = n === void 0 ? {} : n, u = ee(), s = I(), m = A(e, {
    relative: a
  });
  return c.useCallback((h) => {
    if (ce(h, o)) {
      h.preventDefault();
      let v = i !== void 0 ? i : k(s) === k(m);
      u(e, {
        replace: v,
        state: t,
        preventScrollReset: r,
        relative: a,
        unstable_viewTransition: l
      });
    }
  }, [s, u, m, i, t, o, e, r, a, l]);
}
function Ce() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let Re = 0, _e = () => "__" + String(++Re) + "__";
function Fe() {
  let {
    router: e
  } = G(T.UseSubmit), {
    basename: n
  } = c.useContext(L), o = te();
  return c.useCallback(function(i, t) {
    t === void 0 && (t = {}), Ce();
    let {
      action: r,
      method: a,
      encType: l,
      formData: u,
      body: s
    } = de(i, n);
    if (t.navigate === !1) {
      let m = t.fetcherKey || _e();
      e.fetch(m, o, t.action || r, {
        preventScrollReset: t.preventScrollReset,
        formData: u,
        body: s,
        formMethod: t.method || a,
        formEncType: t.encType || l,
        unstable_flushSync: t.unstable_flushSync
      });
    } else
      e.navigate(t.action || r, {
        preventScrollReset: t.preventScrollReset,
        formData: u,
        body: s,
        formMethod: t.method || a,
        formEncType: t.encType || l,
        replace: t.replace,
        state: t.state,
        fromRouteId: o,
        unstable_flushSync: t.unstable_flushSync,
        unstable_viewTransition: t.unstable_viewTransition
      });
  }, [e, n, o]);
}
function Te(e, n) {
  let {
    relative: o
  } = n === void 0 ? {} : n, {
    basename: i
  } = c.useContext(L), t = c.useContext(ne);
  t || (process.env.NODE_ENV !== "production" ? N(!1, "useFormAction must be used inside a RouteContext") : N(!1));
  let [r] = t.matches.slice(-1), a = g({}, A(e || ".", {
    relative: o
  })), l = I();
  if (e == null) {
    a.search = l.search;
    let u = new URLSearchParams(a.search);
    u.has("index") && u.get("index") === "" && (u.delete("index"), a.search = u.toString() ? "?" + u.toString() : "");
  }
  return (!e || e === ".") && r.route.index && (a.search = a.search ? a.search.replace(/^\?/, "?index&") : "?index"), i !== "/" && (a.pathname = a.pathname === "/" ? i : oe([i, a.pathname])), k(a);
}
function Le(e, n) {
  n === void 0 && (n = {});
  let o = c.useContext(H);
  o == null && (process.env.NODE_ENV !== "production" ? N(!1, "`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : N(!1));
  let {
    basename: i
  } = G(T.useViewTransitionState), t = A(e, {
    relative: n.relative
  });
  if (!o.isTransitioning)
    return !1;
  let r = y(o.currentLocation.pathname, i) || o.currentLocation.pathname, a = y(o.nextLocation.pathname, i) || o.nextLocation.pathname;
  return M(t.pathname, a) != null || M(t.pathname, r) != null;
}
export {
  Oe as BrowserRouter,
  Ne as Form,
  q as Link,
  ye as NavLink,
  Ge as NavigationType,
  Ie as Route,
  Q as Router,
  Ke as Routes,
  re as UNSAFE_DataRouterContext,
  $ as UNSAFE_DataRouterStateContext,
  be as UNSAFE_FetchersContext,
  Be as UNSAFE_LocationContext,
  L as UNSAFE_NavigationContext,
  ne as UNSAFE_RouteContext,
  H as UNSAFE_ViewTransitionContext,
  te as UNSAFE_useRouteId,
  k as createPath,
  Me as createRoutesFromChildren,
  We as createRoutesFromElements,
  Xe as isRouteErrorResponse,
  M as matchPath,
  Ye as matchRoutes,
  Je as parsePath,
  Qe as resolvePath,
  Le as unstable_useViewTransitionState,
  Te as useFormAction,
  Z as useHref,
  je as useInRouterContext,
  xe as useLinkClickHandler,
  I as useLocation,
  ee as useNavigate,
  A as useResolvedPath,
  ze as useRouteError,
  He as useRoutes,
  Fe as useSubmit
};
